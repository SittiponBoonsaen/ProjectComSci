import { VERSION, SecurityContext, Pipe, NgModule } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/platform-browser';
class TrustHtmlPipe {
    /**
     * @param {?} sanitizer
     */
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
    }
    /**
     * @param {?} htmlString
     * @return {?}
     */
    transform(htmlString) {
        /** @type {?} */
        let result;
        if (!VERSION || VERSION.major === '2') {
            result = this.sanitizer.bypassSecurityTrustHtml(htmlString);
        }
        else {
            result = this.sanitizer.sanitize(SecurityContext.HTML, htmlString);
        }
        return result;
    }
}
TrustHtmlPipe.ɵfac = function TrustHtmlPipe_Factory(t) { return new (t || TrustHtmlPipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };
TrustHtmlPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "trustHtml", type: TrustHtmlPipe, pure: true });
/** @nocollapse */
TrustHtmlPipe.ctorParameters = () => [
    { type: DomSanitizer }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TrustHtmlPipe, [{
        type: Pipe,
        args: [{
                name: 'trustHtml'
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }]; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TrustHtmlModule {
}
TrustHtmlModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TrustHtmlModule });
TrustHtmlModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TrustHtmlModule_Factory(t) { return new (t || TrustHtmlModule)(); }, imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TrustHtmlModule, { declarations: [TrustHtmlPipe], exports: [TrustHtmlPipe] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TrustHtmlModule, [{
        type: NgModule,
        args: [{
                declarations: [TrustHtmlPipe],
                imports: [],
                exports: [TrustHtmlPipe]
            }]
    }], null, null); })();

export { TrustHtmlModule, TrustHtmlPipe };

//# sourceMappingURL=trust-html.js.map